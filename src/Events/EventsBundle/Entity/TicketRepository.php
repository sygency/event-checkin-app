<?php

namespace Events\EventsBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TicketRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TicketRepository extends EntityRepository
{
    /**
     * @param $id int
     * @param $checkIn boolean
     */
    public function checkIn($id, $checkIn = true) {
        $ticket = $this->find($id);
        $ticket->setCheckedIn($checkIn);

        $this->getEntityManager()->persist($ticket);
        $this->getEntityManager()->flush();
    }

    /**
     * @param $ids
     * @return array
     */
    public function findAllByIds($ids) {
        return $this->createQueryBuilder('t')
            ->where('t.id IN (:ids)')
            ->setParameter('ids', $ids)
            ->getQuery()->getResult();
    }

    /**
     * Get percentage of checked out tickets
     *
     * @return float
     */
    public function getCheckedInPercentage() {
        $total = $this->getTicketCount();
        $checkedIn = $this->getCheckedInCount();

        return $checkedIn / $total * 100;
    }

    /**
     * Get total ticket count
     *
     * @return int
     */
    public function getTicketCount() {
        $totalQb = $this->getEntityManager()->createQueryBuilder()
            ->select('count(ticket.id)')
            ->from('EventsBundle:Ticket','ticket');

        return $totalQb->getQuery()->getSingleScalarResult();
    }

    /**
     * Get number of checked out tickets
     *
     * @return int
     */
    public function getCheckedInCount() {
        $checkedInQb = $this->getEntityManager()->createQueryBuilder()
            ->select('count(ticket.id)')
            ->from('EventsBundle:Ticket','ticket')
            ->where('ticket.checkedIn = 1');

        return $checkedInQb->getQuery()->getSingleScalarResult();
    }
}
